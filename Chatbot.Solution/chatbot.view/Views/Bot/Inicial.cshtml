@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    Layout = null;
}
<!doctype html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>ChatBot</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <!-- <style>
          .div1 {
        width: 100px;
        height: 100px;
        background-color: red;
        float: left;
    }

    .div2 {
        width: 100px;
        height: 100px;
        background-color: blue;
        float: right;
    }

    .line {
        width: 2px; /* largura da linha */
        height: 100px; /* altura da linha */
        background-color: black; /* cor da linha */
        border: none;
        float: left;
    }
        </style> -->
</head>

<body>

    <div class="container-fluid">
        <!-- esse row e responsavel pela estrutura basica do site -->
        <div class="row">
            <!-- essa linha aqui seria o cabecalho -->
            <div class="col-12 p-3 bg-dark">
                <h1 class="text-light h1">ChatBot Concept</h1>
            </div>
            <!--Linha para o menu de seleção de tipo e os menus-->
            <div class="col-12 p-5" style="min-height: 100vh; background-color: #f8f8ff;">
                <div class="row gap-3">

                    <!--Menu de Configurações bot-->
                    <div class="col-2 p-3 bg-success rounded-2" style="max-height: 11rem;">
                        <a class="text-decoration-none text-light" href="/bot/inicial">Inicial</a>
                        <hr>
                        <a class="text-decoration-none text-light" href="/bot">Menus</a>
                        <hr>
                        <a class="text-decoration-none text-light">Configuração</a>
                    </div>

                    <!-- <div class="div1"></div>
                    <hr class="line">
                    <div class="div2"></div> -->
                    <!--Menu de Flows-->
                    <div class="col rounded-2 p-5" style="background-color: white;">
                        <div>
                            <button class="btn btn-success mt-3" data-bs-toggle="modal" data-bs-target="#exampleModal">
                                Adicionar
                                Menu
                            </button>
                        </div>
                        <div id="MenuBody" class="ms-5">
                        </div>
                        <!--Menus-->
                        <!--So para deixar anotado para discução, eu pensei em deixar os menus tendo seu flow independente, e em lugares onde a option fosse um
                        novo menu apenas colocaria esse menu la como opção e pronto, ficaria mais ou menos assim como exemplo, o cara configura o menu de suporte
                        inteiro com todas as opções ai como exemplo no menu inicial ele quer colocar ele como a resposta de uma option, seria apenas colocar,
                        que funcionaria numa boa, vou pensar mais sobre por hoje vou fazer apenas o esqueleto dessa tela-->

                    </div>

                </div>
            </div>

        </div>
    </div>

    <!--Modal Para Criação de Menu-->
    <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
            <div class="modal-content">
                <div class="modal-body">
                    <select id="SelecionarTipoMenu" class="form-select" aria-label="Default select example">
                        <option value="PrimeiraMensagem">Primeira Mensagem</option>
                    </select>
                    <div class="input-group mb-3">
                        <span class="input-group-text" id="inputGroup-sizing-default">Titulo</span>
                        <input type="text" class="form-control" id="TituloMenu" aria-label="Sizing example input"
                               aria-describedby="inputGroup-sizing-default">
                    </div>
                    <div class="input-group mb-3">
                        <span class="input-group-text" id="inputGroup-sizing-default">Header</span>
                        <input type="text" class="form-control" id="header" maxlength="24" aria-label="Sizing example input"
                               aria-describedby="inputGroup-sizing-default">
                    </div>
                    <div class="input-group mb-3">
                        <span class="input-group-text" id="inputGroup-sizing-default">Body</span>
                        <input type="text" class="form-control" id="body" aria-label="Sizing example input"
                               aria-describedby="inputGroup-sizing-default">
                    </div>

                    <div class="input-group mb-3">
                        <span class="input-group-text" id="inputGroup-sizing-default">Footer</span>
                        <input type="text" class="form-control" id="footer" maxlength="24" aria-label="Sizing example input"
                               aria-describedby="inputGroup-sizing-default">
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" onclick="CriarMenu()">Save changes</button>
                </div>
            </div>
        </div>
    </div>

    <!--Modal Para Criação de Options-->
    <div class="modal fade" id="exampleModal1" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
            <div class="modal-content">
                <div class="modal-body">
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="flexRadioDefault" id="FinalizarAtendimento">
                        <label class="form-check-label" for="flexRadioDefault1">
                            Finalizar Atendimento Apos A Resposta?
                        </label>
                    </div>
                    <select id="SelectTipoResposta" class="form-select" aria-label="Default select example">
                        <option value="MensagemDeResposta">Opção de Resposta Simples</option>
                        <option value="MensagemDeRespostaInterativa">Opção De Resposta Interativa</option>
                    </select>
                    <div class="input-group mb-3">
                        <span class="input-group-text" id="inputGroup-sizing-default">Titulo</span>
                        <input type="text" class="form-control" id="TituloOptin" maxlength="24" aria-label="Sizing example input"
                               aria-describedby="inputGroup-sizing-default">
                    </div>
                    <div class="input-group mb-3">
                        <span class="input-group-text" id="inputGroup-sizing-default">Descricao</span>
                        <input type="text" class="form-control" id="DescricaoOption" maxlength="24"
                               aria-label="Sizing example input" aria-describedby="inputGroup-sizing-default">
                    </div>
                    <div id="RespostaTipo">
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" onclick="CriarOptions()">Save changes</button>
                </div>
            </div>
        </div>
    </div>

    <!--Modal Para Atualização de Options-->
    <div class="modal fade" id="exampleModal2" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
            <div class="modal-content">
                <div class="modal-body">
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="flexRadioDefault" id="FinalizarAtendimentoAtualizacao">
                        <label class="form-check-label" for="flexRadioDefault1">
                            Finalizar Atendimento Apos A Resposta?
                        </label>
                    </div>
                    <select id="SelectTipoRespostaAtualizacao" class="form-select" aria-label="Default select example">
                        <option value="MensagemDeResposta">Opção de Resposta Simples</option>
                        <option value="MensagemDeRespostaInterativa">Opção De Resposta Interativa</option>
                    </select>
                    <div class="input-group mb-3">
                        <span class="input-group-text" id="inputGroup-sizing-default">Titulo</span>
                        <input type="text" class="form-control" id="TituloOptinAtualizacao" maxlength="24"
                               aria-label="Sizing example input" aria-describedby="inputGroup-sizing-default">
                    </div>
                    <div class="input-group mb-3">
                        <span class="input-group-text" id="inputGroup-sizing-default">Descricao</span>
                        <input type="text" class="form-control" id="DescricaoOptionAtualizacao" maxlength="24"
                               aria-label="Sizing example input" aria-describedby="inputGroup-sizing-default">
                    </div>
                    <div id="RespostaTipoAtualizacao">
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary buttonAtualizar" onclick="AtualizarOption()">
                        Save
                        changes
                    </button>
                </div>
            </div>
        </div>
    </div>

    <script>




        //Salvar o Valor dos Menus no LocalStorage
        function EventListenerBotaoOption(option) {
            const menuId = option.id;
            localStorage.setItem("MenuId", menuId);
            TipoDeRespostaMenu()
        }

        //Salvar o Valor dos Selects nas Option
        const meuSelect = document.getElementById('SelectTipoResposta');

        meuSelect.addEventListener('change', function () {
            const valorSelecionado = meuSelect.value;
            localStorage.setItem("TipoMenu", valorSelecionado);
            TipoDeRespostaMenu()
        });

        //Salvar o Valor dos Selects nas Option
        const meuSelectAtualizacao = document.getElementById('SelectTipoRespostaAtualizacao');

        meuSelectAtualizacao.addEventListener('change', function () {
            const valorSelecionado = meuSelectAtualizacao.value;
            localStorage.setItem("TipoMenuAtualizacao", valorSelecionado);
            TipoDeRespostaMenuAtualizacao()
        });


        //Salvar o Valor dos Selects nas Option
        const SelectMenu = document.getElementById('SelecionarTipoMenu');

        SelectMenu.addEventListener('change', function () {

            const valorSelecionado = meuSelect.value;


            localStorage.setItem("TipoMenuSelecionado", valorSelecionado);
        });



        //Função Para Selecionar o Tipo Da Resposta da Option
        function TipoDeRespostaMenu() {
            {
                if (meuSelect.value == "MensagemDeResposta") {
                    document.getElementById('RespostaTipo').innerHTML = `
                <div class="input-group mb-3">
                    <span class="input-group-text" id="inputGroup-sizing-default">Resposta</span>
                    <input type="text" class="form-control" id="RespostaOption" aria-label="Sizing example input"
                      aria-describedby="inputGroup-sizing-default">
                  </div>
                `
                } else {

                    fetch("https://localhost:44395/Menus")
                        .then((response) => response.json())
                        .then((responseJson) => {
                            document.getElementById("RespostaTipo").innerHTML = `
                    <select class="form-select" id="RespostaOption" aria-label="Default select example">
                    </select>
                      `
                            responseJson.forEach((element, index) => {
                                document.getElementById("RespostaOption").innerHTML += `
                      <option value="${index}">${element.menTitle}</option>
                    `
                            });
                        })
                        .catch((error) => {
                            console.error(error);
                        });

                }
            }
        }

        function TipoDeRespostaMenuAtualizacao() {
            if (meuSelectAtualizacao.value == "MensagemDeResposta") {
                document.getElementById('RespostaTipoAtualizacao').innerHTML = `
                <div class="input-group mb-3">
                    <span class="input-group-text" id="inputGroup-sizing-default">Resposta</span>
                    <input type="text" class="form-control" id="RespostaOptionAtualizacao" aria-label="Sizing example input"
                      aria-describedby="inputGroup-sizing-default">
                  </div>
                `
            } else {

                fetch("https://localhost:44395/Menus")
                    .then((response) => response.json())
                    .then((responseJson) => {
                        document.getElementById("RespostaTipoAtualizacao").innerHTML = `
                    <select class="form-select" id="RespostaOptionAtualizacao" aria-label="Default select example">
                    </select>
                      `
                        responseJson.forEach((element, index) => {
                            document.getElementById("RespostaOptionAtualizacao").innerHTML += `
                      <option value="${index}">${element.menTitle}</option>
                    `
                        });
                    })
                    .catch((error) => {
                        console.error(error);
                    });

            }

        }



        function colocarIdDoMenuNaOption(optid, menid) {
            localStorage.setItem('IdDaOption', optid)
            const menuId = menid;
            localStorage.setItem("MenuIdAtualizacao", menuId);
            TipoDeRespostaMenuAtualizacao()
        }


        //Função Para Carregar os Dados Tanto de Menus Quanto de Options
        function carregar() {
            //lembrar de colocar o endpoint para resgatar os menus por id especifico de login
            fetch(location.origin + "/Menus/MenuInicial/" + @User.Identity.Name)
                .then((response) => response.json())
                .then((responseJson) => {
                    document.getElementById("MenuBody").innerHTML += `
                                    <div class="row" id="${responseJson.menId}">
                              <div class="col-12 mt-5">
                                <div class="container">
                                  <div class="row">
                                    <!-- Primeira coluna -->
                                    <div class="col-3 p-4 bg-success menu" >
                                              <p>Titulo: ${responseJson.menTitle}</p>
                                      <div>
                                                  <button class="btn btn-warning mt-3 btnadicionarOption" onclick=(EventListenerBotaoOption(this)) id=${responseJson.menId} data-bs-toggle="modal" data-bs-target="#exampleModal1">Adicionar
                                            Options</button>
                                        </div>
                                    </div>
                                    <!-- Quebra para a próxima linha -->
                                    <div class="w-100"></div>
                                  </div>
                                </div>
                              </div>
                            </div>

                            `
                    // responseJson.forEach(element => {
                   
                    // });
                })
                .catch((error) => {
                    console.error(error);
                });

            fetch(location.origin + "/options")
                .then((response) => response.json())
                .then((responseJson) => {
                    var listaDeIDs = []
                    responseJson.forEach(element => {
                        var entrarNaLista = true
                        if (!listaDeIDs.includes(element.men.menId) || listaDeIDs.includes(null)) {
                            entrarNaLista = true
                        } else {
                            entrarNaLista = false
                        }
                        var lista = responseJson.filter(x => x.men.menId == element.men.menId && entrarNaLista == true)
                        listaDeIDs.push(element.men.menId)
                        lista.forEach((element, index) => {

                            //se preferir o esquema de escadinha nas options e so colocar o index no lugar do 1 do offset no caso ficaria assim offset-${index+1}
                            document.getElementById(`${element.men.menId}`).innerHTML += `
                            <!-- Segunda coluna com offset para criar o efeito de degrau -->
                            <div class="col-3 offset-1 p-5 bg-danger mt-3">Titulo: ${element.optTitle}
                              <button class="btn btn-success mt-3" data-bs-toggle="modal" onclick="colocarIdDoMenuNaOption(${element.optId}, ${element.men.menId})"" data-bs-target="#exampleModal2">Atualizar Option</button>
                              </div>
                            <div class="w-100"></div>
                    `
                        });
                    });
                })
                .catch((error) => {
                    console.log("Lembrar de arrumar esse errinho depois, o negocio e que ele ta puxando os ids e colocando no looping mesmo sem eles existirem")
                });
            
        }
        carregar()


        //Função Para Criar um Menu
        function CriarMenu() {
            const url = 'https://localhost:44395/Menus/Create';

            // Dados a serem enviados no corpo da requisição, Lembrar que o LogId esta Fixo ne versão final tem que puxar o id logado dos cookies
            const data = {
                menTitle: document.getElementById('TituloMenu').value,
                menHeader: document.getElementById('header').value,
                menFooter: document.getElementById('footer').value,
                menTipo: SelectMenu.value,
                menBody: document.getElementById('body').value,
                logId: @User.Identity.Name,
            };

            // Configurações da requisição
            const options = {
                method: 'POST', // Método HTTP POST
                headers: {
                    'Content-Type': 'application/json' // Tipo de conteúdo JSON
                },
                body: JSON.stringify(data) // Converte o objeto JavaScript em JSON
            };

            // Realiza a requisição usando fetch
            fetch(url, options)
                .then(response => {
                    if (response.ok) {
                        return response.json(); // Retorna os dados da resposta como JSON
                    }
                    throw new Error('Erro ao enviar os dados.'); // Lança um erro se a requisição falhar
                })
                .then(data => {
                    console.log('Resposta do servidor:', data);
                    location.reload()

                })
                .catch(error => {
                    console.error('Ocorreu um erro:', error);

                });
        }

        //Função Para Criar Uma Opção
        function CriarOptions() {
            const url = 'https://localhost:44395/options/Create';

            // Dados a serem enviados no corpo da requisição, Lembrar que o LogId esta Fixo, na versão final tem que puxar o id logado dos cookies
            const data = {
                optTitle: document.getElementById('TituloOptin').value,
                optDescricao: document.getElementById('DescricaoOption').value,
                optResposta: document.getElementById('RespostaOption').value,
                optData: new Date(),
                optFinalizar: document.getElementById('FinalizarAtendimento').checked,
                logId: @User.Identity.Name,
                menId: localStorage.getItem("MenuId"),
                optTipo: localStorage.getItem("TipoMenu")
            };

            // Configurações da requisição
            const options = {
                method: 'POST', // Método HTTP POST
                headers: {
                    'Content-Type': 'application/json' // Tipo de conteúdo JSON
                },
                body: JSON.stringify(data) // Converte o objeto JavaScript em JSON
            };

            // Realiza a requisição usando fetch
            fetch(url, options)
                .then(response => {
                    if (response.ok) {
                        return response.json(); // Retorna os dados da resposta como JSON
                    }
                    throw new Error('Erro ao enviar os dados.'); // Lança um erro se a requisição falhar
                })
                .then(data => {
                    console.log('Resposta do servidor:', data);
                    location.reload()

                })
                .catch(error => {
                    console.error('Ocorreu um erro:', error);

                });
        }

        //Função Para Atualizar Uma Opção
        function AtualizarOption() {
            const url = 'https://localhost:44395/option/Update';

            // Dados a serem enviados no corpo da requisição, Lembrar que o LogId esta Fixo, na versão final tem que puxar o id logado dos cookies
            const data = {
                optId: localStorage.getItem('IdDaOption'),
                optTitle: document.getElementById('TituloOptinAtualizacao').value,
                optDescricao: document.getElementById('DescricaoOptionAtualizacao').value,
                optResposta: document.getElementById('RespostaOptionAtualizacao').value,
                optData: new Date(),
                optFinalizar: document.getElementById('FinalizarAtendimentoAtualizacao').checked,
                logId: @User.Identity.Name,
                menId: localStorage.getItem("MenuIdAtualizacao"),
                optTipo: meuSelectAtualizacao.value
            };

            // Configurações da requisição
            const options = {
                method: 'PUT', // Método HTTP PUT
                headers: {
                    'Content-Type': 'application/json' // Tipo de conteúdo JSON
                },
                body: JSON.stringify(data) // Converte o objeto JavaScript em JSON
            };

            // Realiza a requisição usando fetch
            fetch(url, options)
                .then(response => {
                    if (response.ok) {
                        return response.json(); // Retorna os dados da resposta como JSON
                    }
                    throw new Error('Erro ao enviar os dados.'); // Lança um erro se a requisição falhar
                })
                .then(data => {
                    console.log('Resposta do servidor:', data);
                    location.reload()

                })
                .catch(error => {
                    console.error('Ocorreu um erro:', error);

                });
        }
    </script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
            crossorigin="anonymous"></script>
</body>

</html>